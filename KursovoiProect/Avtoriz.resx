<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAC0AAAAtCAYAAAA6GuKaAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vwAADr8BOAVTJAAAA99JREFUaEPtl02IHEUUx8foYfpzekQMBj+IoAT1sFuvenZFkPUkIoiCF0EwiKCi
        CJ725ncCCSzeBMFk9SAoiih4UMGN98QkZjGQww5KosmO87U709PT0zOj/+p5O5nNTjQ9bEyj/YM/XVS/
        qn5d9epVVSYlJSUl5b+JLruORY15kxpfm7L9iS2re/lVMsnJ0pRO4YWs6DcMGfyoUffnrPizb5B3wpGV
        69ksOdz+kKfD4aOa6BYtqu/h6kzOrT+hiX7fptphrro22LL+HBw8olN3KE30flCjinB4is2GmLR2SKN+
        b9Q+rrKi922u0Hyau4wPpv+ccnCr+v0b6fRuNhviFOp7x9vHE8Ktyl3GBwvtK4RBf1TKYdWxLWsPs9kQ
        XbRex0htso8rzGzPkN2PuMvJMEXLNETgXFQ7r1FQxAeWHbmqsRl+sEwa9arIJIsDu87AntQTGvfcpHDw
        RBvucnuBszIaEfI7hvA+1IX/OWagqlNwHIvx6nx0O9g1u3yf5XqHDGqvaKJzEgt0/qqNUsoVYsj1PDae
        NwzZOQ6d0ihcdORvd/Lr5IEQ2mWSV1Qxj93zS1P6HyOl+SpTGFSfY7NkgcX6BRZtxaZygasy9zxy3sSI
        H9NEMHk+vhwGBa/p1P6DVb6ogBWV8S4qb9iwPepEu4wRDpBh9uWnTyGl+d8jNI5a7vqem2fPParyPepC
        ZTcU+WXLbb/KLsQnS73V0Z1qUjmF2vOWrEROKpnUfGfnTHH3xkZ1qZA2V9mF+Jii9iaP2sRSjlm0/t5d
        c2dsbDzfoW4lR6szBq09rt7polO6pE0Ji3Y/u3Bt0IW3Xy06xPQLXIXdszKHwxGcC5asae8Grk4WyBjf
        qGnHKFbxA6dxEvRRXs4V2reySTJx3OqTCIUFjTrv5wull/LTPyVj97yp8Ot1XEw2eVnb4RTWXtREeCIr
        ums6dZqY+nft6fPDE2DiwJHybRyWkAVaR2zZeMsQ/kH8ANJWuHLb7LEcm/27WMLDrbvl4FwdSZUH8h28
        ux9n6K7tNhfYPCJHv0zh5Ne3ZPMDi9A+agf7jXbDJ5dH+rXFusHdTIbttj5V52aVsi4npC4feXfLokKY
        HB5sFOPb/Z1wYf6Mu4kPttXG6E41TgiDsecHtF0YZ38lguNnuZv45GXlGYz00uCmvPlWroTOT6pdDQtx
        iptE3PHgWVuXIfJxr7i17T+UZbhkycbL3NX248jqDsTuGV0EFzClM6pucC9sLcLhEIehxyLDpHHLA6V7
        4fjvalrhZBnh0sToV23Xe4VNkoslW8/ignsAqW/ecUt3c3VKSkpKyv+OTOYvS9MZMwKlnXMAAAAASUVO
        RK5CYII=
</value>
  </data>
</root>